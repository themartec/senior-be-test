<p class="mt-3" style="text-align: center">Date range: <strong><%= fromDate %></strong> to <strong><%= toDate %></strong></p>
<div class="row mt-3">
    <div class="col" style="text-align: center">
        <div id="active-users-by-country-chart"></div>
    </div>
</div>
<div class="row mt-3">
    <div class="col" style="text-align: center">
        <div id="average-engagement-time-chart"></div>
    </div>
</div>

<script type="text/javascript">

  // Load the Visualization API and the corechart package.
  google.charts.load('current', {'packages':['corechart']});

  // Set a callback to run when the Google Visualization API is loaded.
  google.charts.setOnLoadCallback(drawCharts);

  // Callback that creates and populates a data table,
  // instantiates the pie chart, passes in the data and
  // draws it.
  function drawCharts() {
    const reports = <%- JSON.stringify(data.reports) %> || [];

    if (!reports.length) {
      return;
    }

    // Draw column chart
    const aubcRawData = reports[0];
    const aubcArrayData = [
      ['Country', 'Active users']
    ];
    aubcRawData.rows.forEach((row) => aubcArrayData.push([row.dimensionValues[0].value, Number(row.metricValues[0].value)]));
    const aubcChartData = google.visualization.arrayToDataTable(aubcArrayData);

    // Set chart options
    const aubcChartOptions = {
      title: 'Active users by country',
      width: 700,
      height: 300
    };

    // Instantiate and draw our chart, passing in some options.
    const columnChart = new google.visualization.ColumnChart(document.getElementById('active-users-by-country-chart'));
    columnChart.draw(aubcChartData, aubcChartOptions);

    // Draw line chart
    const aetRawData = reports[1];

    const aetArrayData = [
      ['Date', 'Active minutes']
    ];

    aetRawData
      .rows
      .sort((rowa, rowb) => rowa.dimensionValues[0].value - rowb.dimensionValues[0].value)
      .forEach((row) => aetArrayData.push([
        moment().week(row.dimensionValues[0].value).format('YYYY-MM-DD'),
        Number(row.metricValues[0].value) / Number(row.metricValues[1].value) / 60
      ]));

    const aetChartData = google.visualization.arrayToDataTable(aetArrayData);

    // Set chart options
    const aetChartOptions = {
      title: 'Average engagement time',
      width: 700,
      height: 300
    };

    // Instantiate and draw our chart, passing in some options.
    const lineChart = new google.visualization.LineChart(document.getElementById('average-engagement-time-chart'));
    lineChart.draw(aetChartData, aetChartOptions);
  }
</script>